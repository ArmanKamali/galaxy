{"version":3,"sources":["webpack:///login.bundled.js","webpack:///./galaxy/scripts/apps/login.js","webpack:///./galaxy/scripts/layout/page.js"],"names":["webpackJsonp","151","module","exports","__webpack_require__","Backbone","_","_interopRequireDefault","obj","__esModule","default","_jquery","_jquery2","_galaxy","_galaxy2","_localization","_localization2","_page","_page2","$","window","app","options","bootstrapped","Galaxy","GalaxyApp","debug","redirect","encodeURI","show_welcome_with_login","params","param","use_panels","location","href","root","LoginPage","View","extend","initialize","page","this","model","Model","title","setElement","_template","render","prop","welcome_url","Right","call","44","Object","defineProperty","value","_masthead","_masthead2","_panel","_panel2","_uiModal","_uiModal2","_utils","_utils2","el","className","_panelids","self","config","defaults","message_box_visible","message_box_content","message_box_class","show_inactivity_warning","inactivity_box_content","modal","display","view","setWindowTitle","allow_title_display","center","router","Router","masthead","CenterPanel","$el","attr","html","replaceWith","append","frame","$messagebox","$inactivebox","panels","each","panel_id","panel_class_name","charAt","toUpperCase","slice","panel_class","panel_instance","toString","SidePanel","id","history","start","pushState","remove","renderMessageBox","renderInactivityBox","renderPanels","_checkCommunicationServerOnline","content","level","addClass","toggle","show","removeClass","hide","verificationLink","text","panel","css","join","host","communication_server_host","port","communication_server_port","preferences","user","attributes","$chat_icon_element","indexOf","communication_server","ajax","url","success","data","error"],"mappings":"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","file":"login.bundled.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 151:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _) {\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _galaxy = __webpack_require__(65);\n\nvar _galaxy2 = _interopRequireDefault(_galaxy);\n\nvar _localization = __webpack_require__(3);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nvar _page = __webpack_require__(44);\n\nvar _page2 = _interopRequireDefault(_page);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar $ = _jquery2.default;\n\n\nwindow.app = function app(options, bootstrapped) {\n    window.Galaxy = new _galaxy2.default.GalaxyApp(options, bootstrapped);\n    Galaxy.debug(\"login app\");\n    var redirect = encodeURI(options.redirect);\n\n    // TODO: remove iframe for user login (at least) and render login page from here\n    // then remove this redirect\n    if (!options.show_welcome_with_login) {\n        var params = _jquery2.default.param({ use_panels: \"True\", redirect: redirect });\n        window.location.href = Galaxy.root + \"user/login?\" + params;\n        return;\n    }\n\n    var LoginPage = Backbone.View.extend({\n        initialize: function initialize(page) {\n            this.page = page;\n            this.model = new Backbone.Model({ title: (0, _localization2.default)(\"Login required\") });\n            this.setElement(this._template());\n        },\n        render: function render() {\n            this.page.$(\"#galaxy_main\").prop(\"src\", options.welcome_url);\n        },\n        _template: function _template() {\n            var login_url = options.root + \"user/login?\" + $.param({\n                redirect: redirect\n            });\n            return \"<iframe src=\\\"\" + login_url + \"\\\" frameborder=\\\"0\\\" style=\\\"width: 100%; height: 100%;\\\"/>\";\n        }\n    });\n\n    $(function () {\n        Galaxy.page = new _page2.default.View(_.extend(options, {\n            Right: LoginPage\n        }));\n    });\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ }),\n\n/***/ 44:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _masthead = __webpack_require__(68);\n\nvar _masthead2 = _interopRequireDefault(_masthead);\n\nvar _panel = __webpack_require__(43);\n\nvar _panel2 = _interopRequireDefault(_panel);\n\nvar _uiModal = __webpack_require__(9);\n\nvar _uiModal2 = _interopRequireDefault(_uiModal);\n\nvar _utils = __webpack_require__(5);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar View = Backbone.View.extend({\n    el: \"body\",\n    className: \"full-content\",\n    _panelids: [\"left\", \"right\"],\n\n    initialize: function initialize(options) {\n        var self = this;\n        this.config = _.defaults(options.config || {}, {\n            message_box_visible: false,\n            message_box_content: \"\",\n            message_box_class: \"info\",\n            show_inactivity_warning: false,\n            inactivity_box_content: \"\"\n        });\n\n        // attach global objects, build mastheads\n        Galaxy.modal = this.modal = new _uiModal2.default.View();\n        Galaxy.display = this.display = function (view) {\n            if (view.title) {\n                _utils2.default.setWindowTitle(view.title);\n                view.allow_title_display = false;\n            } else {\n                _utils2.default.setWindowTitle();\n                view.allow_title_display = true;\n            }\n            self.center.display(view);\n        };\n        Galaxy.router = this.router = options.Router && new options.Router(self, options);\n        this.masthead = new _masthead2.default.View(this.config);\n        this.center = new _panel2.default.CenterPanel();\n\n        // build page template\n        this.$el.attr(\"scroll\", \"no\");\n        this.$el.html(this._template());\n        this.$(\"#masthead\").replaceWith(this.masthead.$el);\n        this.$(\"#center\").append(this.center.$el);\n        this.$el.append(this.masthead.frame.$el);\n        this.$el.append(this.modal.$el);\n        this.$messagebox = this.$(\"#messagebox\");\n        this.$inactivebox = this.$(\"#inactivebox\");\n\n        // build panels\n        this.panels = {};\n        _.each(this._panelids, function (panel_id) {\n            var panel_class_name = panel_id.charAt(0).toUpperCase() + panel_id.slice(1);\n            var panel_class = options[panel_class_name];\n            if (panel_class) {\n                var panel_instance = new panel_class(self, options);\n                self[panel_instance.toString()] = panel_instance;\n                self.panels[panel_id] = new _panel2.default.SidePanel({\n                    id: panel_id,\n                    el: self.$(\"#\" + panel_id),\n                    view: panel_instance\n                });\n            }\n        });\n        this.render();\n\n        // start the router\n        if (this.router) {\n            Backbone.history.start({\n                root: Galaxy.root,\n                pushState: true\n            });\n        }\n    },\n\n    render: function render() {\n        // TODO: Remove this line after select2 update\n        $(\".select2-hidden-accessible\").remove();\n        this.masthead.render();\n        this.renderMessageBox();\n        this.renderInactivityBox();\n        this.renderPanels();\n        this._checkCommunicationServerOnline();\n        return this;\n    },\n\n    /** Render message box */\n    renderMessageBox: function renderMessageBox() {\n        if (this.config.message_box_visible) {\n            var content = this.config.message_box_content || \"\";\n            var level = this.config.message_box_class || \"info\";\n            this.$el.addClass(\"has-message-box\");\n            this.$messagebox.attr(\"class\", \"panel-\" + level + \"-message\").html(content).toggle(!!content).show();\n        } else {\n            this.$el.removeClass(\"has-message-box\");\n            this.$messagebox.hide();\n        }\n        return this;\n    },\n\n    /** Render inactivity warning */\n    renderInactivityBox: function renderInactivityBox() {\n        if (this.config.show_inactivity_warning) {\n            var content = this.config.inactivity_box_content || \"\";\n            var verificationLink = $(\"<a/>\").attr(\"href\", Galaxy.root + \"user/resend_verification\").text(\"Resend verification\");\n            this.$el.addClass(\"has-inactivity-box\");\n            this.$inactivebox.html(content + \" \").append(verificationLink).toggle(!!content).show();\n        } else {\n            this.$el.removeClass(\"has-inactivity-box\");\n            this.$inactivebox.hide();\n        }\n        return this;\n    },\n\n    /** Render panels */\n    renderPanels: function renderPanels() {\n        var self = this;\n        _.each(this._panelids, function (panel_id) {\n            var panel = self.panels[panel_id];\n            if (panel) {\n                panel.render();\n            } else {\n                self.$(\"#center\").css(panel_id, 0);\n                self.$(\"#\" + panel_id).hide();\n            }\n        });\n        return this;\n    },\n\n    /** body template */\n    _template: function _template() {\n        return ['<div id=\"everything\">', '<div id=\"background\"/>', '<div id=\"masthead\"/>', '<div id=\"messagebox\"/>', '<div id=\"inactivebox\" class=\"panel-warning-message\" />', '<div id=\"left\" />', '<div id=\"center\" />', '<div id=\"right\" />', \"</div>\", '<div id=\"dd-helper\" />'].join(\"\");\n    },\n\n    toString: function toString() {\n        return \"PageLayoutView\";\n    },\n\n    /** Check if the communication server is online and show the icon otherwise hide the icon */\n    _checkCommunicationServerOnline: function _checkCommunicationServerOnline() {\n        var host = window.Galaxy.config.communication_server_host;\n        var port = window.Galaxy.config.communication_server_port;\n        var preferences = window.Galaxy.user.attributes.preferences;\n        var $chat_icon_element = $(\"#show-chat-online\");\n        /** Check if the user has deactivated the communication in it's personal settings */\n        if (preferences && [\"1\", \"true\"].indexOf(preferences.communication_server) != -1) {\n            // See if the configured communication server is available\n            $.ajax({\n                url: host + \":\" + port\n            }).success(function (data) {\n                // enable communication only when a user is logged in\n                if (window.Galaxy.user.id !== null) {\n                    if ($chat_icon_element.css(\"visibility\") === \"hidden\") {\n                        $chat_icon_element.css(\"visibility\", \"visible\");\n                    }\n                }\n            }).error(function (data) {\n                // hide the communication icon if the communication server is not available\n                $chat_icon_element.css(\"visibility\", \"hidden\");\n            });\n        } else {\n            $chat_icon_element.css(\"visibility\", \"hidden\");\n        }\n    }\n});\n\nexports.default = { View: View };\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ })\n\n},[151]);\n\n\n// WEBPACK FOOTER //\n// login.bundled.js","import jQuery from \"jquery\";\nvar $ = jQuery;\nimport GalaxyApp from \"galaxy\";\nimport _l from \"utils/localization\";\nimport Page from \"layout/page\";\n\nwindow.app = function app(options, bootstrapped) {\n    window.Galaxy = new GalaxyApp.GalaxyApp(options, bootstrapped);\n    Galaxy.debug(\"login app\");\n    var redirect = encodeURI(options.redirect);\n\n    // TODO: remove iframe for user login (at least) and render login page from here\n    // then remove this redirect\n    if (!options.show_welcome_with_login) {\n        var params = jQuery.param({ use_panels: \"True\", redirect: redirect });\n        window.location.href = `${Galaxy.root}user/login?${params}`;\n        return;\n    }\n\n    var LoginPage = Backbone.View.extend({\n        initialize: function(page) {\n            this.page = page;\n            this.model = new Backbone.Model({ title: _l(\"Login required\") });\n            this.setElement(this._template());\n        },\n        render: function() {\n            this.page.$(\"#galaxy_main\").prop(\"src\", options.welcome_url);\n        },\n        _template: function() {\n            var login_url = `${options.root}user/login?${$.param({\n                redirect: redirect\n            })}`;\n            return `<iframe src=\"${login_url}\" frameborder=\"0\" style=\"width: 100%; height: 100%;\"/>`;\n        }\n    });\n\n    $(() => {\n        Galaxy.page = new Page.View(\n            _.extend(options, {\n                Right: LoginPage\n            })\n        );\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/apps/login.js","import Masthead from \"layout/masthead\";\nimport Panel from \"layout/panel\";\nimport Modal from \"mvc/ui/ui-modal\";\nimport Utils from \"utils/utils\";\n\nvar View = Backbone.View.extend({\n    el: \"body\",\n    className: \"full-content\",\n    _panelids: [\"left\", \"right\"],\n\n    initialize: function(options) {\n        var self = this;\n        this.config = _.defaults(options.config || {}, {\n            message_box_visible: false,\n            message_box_content: \"\",\n            message_box_class: \"info\",\n            show_inactivity_warning: false,\n            inactivity_box_content: \"\"\n        });\n\n        // attach global objects, build mastheads\n        Galaxy.modal = this.modal = new Modal.View();\n        Galaxy.display = this.display = view => {\n            if (view.title) {\n                Utils.setWindowTitle(view.title);\n                view.allow_title_display = false;\n            } else {\n                Utils.setWindowTitle();\n                view.allow_title_display = true;\n            }\n            self.center.display(view);\n        };\n        Galaxy.router = this.router = options.Router && new options.Router(self, options);\n        this.masthead = new Masthead.View(this.config);\n        this.center = new Panel.CenterPanel();\n\n        // build page template\n        this.$el.attr(\"scroll\", \"no\");\n        this.$el.html(this._template());\n        this.$(\"#masthead\").replaceWith(this.masthead.$el);\n        this.$(\"#center\").append(this.center.$el);\n        this.$el.append(this.masthead.frame.$el);\n        this.$el.append(this.modal.$el);\n        this.$messagebox = this.$(\"#messagebox\");\n        this.$inactivebox = this.$(\"#inactivebox\");\n\n        // build panels\n        this.panels = {};\n        _.each(this._panelids, panel_id => {\n            var panel_class_name = panel_id.charAt(0).toUpperCase() + panel_id.slice(1);\n            var panel_class = options[panel_class_name];\n            if (panel_class) {\n                var panel_instance = new panel_class(self, options);\n                self[panel_instance.toString()] = panel_instance;\n                self.panels[panel_id] = new Panel.SidePanel({\n                    id: panel_id,\n                    el: self.$(`#${panel_id}`),\n                    view: panel_instance\n                });\n            }\n        });\n        this.render();\n\n        // start the router\n        if (this.router) {\n            Backbone.history.start({\n                root: Galaxy.root,\n                pushState: true\n            });\n        }\n    },\n\n    render: function() {\n        // TODO: Remove this line after select2 update\n        $(\".select2-hidden-accessible\").remove();\n        this.masthead.render();\n        this.renderMessageBox();\n        this.renderInactivityBox();\n        this.renderPanels();\n        this._checkCommunicationServerOnline();\n        return this;\n    },\n\n    /** Render message box */\n    renderMessageBox: function() {\n        if (this.config.message_box_visible) {\n            var content = this.config.message_box_content || \"\";\n            var level = this.config.message_box_class || \"info\";\n            this.$el.addClass(\"has-message-box\");\n            this.$messagebox\n                .attr(\"class\", `panel-${level}-message`)\n                .html(content)\n                .toggle(!!content)\n                .show();\n        } else {\n            this.$el.removeClass(\"has-message-box\");\n            this.$messagebox.hide();\n        }\n        return this;\n    },\n\n    /** Render inactivity warning */\n    renderInactivityBox: function() {\n        if (this.config.show_inactivity_warning) {\n            var content = this.config.inactivity_box_content || \"\";\n            var verificationLink = $(\"<a/>\")\n                .attr(\"href\", `${Galaxy.root}user/resend_verification`)\n                .text(\"Resend verification\");\n            this.$el.addClass(\"has-inactivity-box\");\n            this.$inactivebox\n                .html(`${content} `)\n                .append(verificationLink)\n                .toggle(!!content)\n                .show();\n        } else {\n            this.$el.removeClass(\"has-inactivity-box\");\n            this.$inactivebox.hide();\n        }\n        return this;\n    },\n\n    /** Render panels */\n    renderPanels: function() {\n        var self = this;\n        _.each(this._panelids, panel_id => {\n            var panel = self.panels[panel_id];\n            if (panel) {\n                panel.render();\n            } else {\n                self.$(\"#center\").css(panel_id, 0);\n                self.$(`#${panel_id}`).hide();\n            }\n        });\n        return this;\n    },\n\n    /** body template */\n    _template: function() {\n        return [\n            '<div id=\"everything\">',\n            '<div id=\"background\"/>',\n            '<div id=\"masthead\"/>',\n            '<div id=\"messagebox\"/>',\n            '<div id=\"inactivebox\" class=\"panel-warning-message\" />',\n            '<div id=\"left\" />',\n            '<div id=\"center\" />',\n            '<div id=\"right\" />',\n            \"</div>\",\n            '<div id=\"dd-helper\" />'\n        ].join(\"\");\n    },\n\n    toString: function() {\n        return \"PageLayoutView\";\n    },\n\n    /** Check if the communication server is online and show the icon otherwise hide the icon */\n    _checkCommunicationServerOnline: function() {\n        var host = window.Galaxy.config.communication_server_host;\n        var port = window.Galaxy.config.communication_server_port;\n        var preferences = window.Galaxy.user.attributes.preferences;\n        var $chat_icon_element = $(\"#show-chat-online\");\n        /** Check if the user has deactivated the communication in it's personal settings */\n        if (preferences && [\"1\", \"true\"].indexOf(preferences.communication_server) != -1) {\n            // See if the configured communication server is available\n            $.ajax({\n                url: `${host}:${port}`\n            })\n                .success(data => {\n                    // enable communication only when a user is logged in\n                    if (window.Galaxy.user.id !== null) {\n                        if ($chat_icon_element.css(\"visibility\") === \"hidden\") {\n                            $chat_icon_element.css(\"visibility\", \"visible\");\n                        }\n                    }\n                })\n                .error(data => {\n                    // hide the communication icon if the communication server is not available\n                    $chat_icon_element.css(\"visibility\", \"hidden\");\n                });\n        } else {\n            $chat_icon_element.css(\"visibility\", \"hidden\");\n        }\n    }\n});\n\nexport default { View: View };\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/layout/page.js"],"sourceRoot":""}